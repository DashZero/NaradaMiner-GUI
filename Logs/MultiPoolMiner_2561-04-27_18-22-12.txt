**********************
PowerShell transcript start
Start time: 20180427182213
Username: 42B7\oak
RunAs User: 42B7\oak
Configuration Name: 
Machine: 42B7 (Microsoft Windows NT 6.2.9200.0)
Host Application: C:\Program Files\PowerShell\6.1.0-preview.1\pwsh.dll -noexit -executionpolicy bypass -windowstyle maximized -command & .\Core.ps1 -wallet 358nQ1UpueNaw3118AmwA1PriTwRU9qbzM -username Meeh -workername multipoolminer -region asia -currency thb -type nvidia -poolname miningpoolhubcoins,zpool,nicehash -algorithm blake2s,cryptonight,decrednicehash,ethash,ethash2gb,equihash,groestl,keccak,lbry,lyra2re2,lyra2z,neoscrypt,pascal,sib,skunk -donate 24 -watchdog -switchingprevention 2
Process ID: 7956
PSVersion: 6.1.0-preview.1
PSEdition: Core
GitCommitId: v6.1.0-preview.1
OS: Microsoft Windows 10.0.16299 
Platform: Win32NT
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.1.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
WSManStackVersion: 3.0
**********************
Transcript started, output file is .\Logs\MultiPoolMiner_2561-04-27_18-22-12.txt
INFO: Updating exchange rates from Coinbase.
INFO: Loading saved statistics.
INFO: Loading pool information.
PS>TerminatingError(Invoke-RestMethod): "The connection with the server was terminated abnormally"
WARNING: Pool API (BlazePool) has failed.
PS>TerminatingError(Get-Content): "The running command stopped because the preference variable "ErrorActionPreference" or common parameter is set to Stop: Cannot find path 'C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Stats\Hashrefinery_MyriadGroestl_Profit.txt' because it does not exist."
INFO: Selecting best pool for each algorithm.
INFO: Getting miner information.
PS>TerminatingError(Invoke-Expression): "Exception calling "GetPlatformIDs" with "0" argument(s): "Unable to load DLL 'OpenCL': The specified module could not be found. (Exception from HRESULT: 0x8007007E)""
>> TerminatingError(Invoke-Expression): "At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties."
>> TerminatingError(Invoke-Expression): "At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties."
>> TerminatingError(Invoke-Expression): "At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties."
>> TerminatingError(Invoke-Expression): "At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties."
>> TerminatingError(Invoke-Expression): "At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties."
Invoke-Expression : At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Include.psm1:214 char:38
+ ...             catch {$Expression = Invoke-Expression "`"$Expression`""}
+                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
+ FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand
Invoke-Expression : At line:1 char:5
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+     ~~~~~~~~~~~~
Unexpected token 'remoteaccess' in expression or statement.

At line:1 char:1
+ ""--remoteaccess -S $($Pools.CryptoNight.Host):$($Pools.CryptoNight.P ...
+ ~~
The '--' operator works only on variables or on properties.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Include.psm1:214 char:38
+ ...             catch {$Expression = Invoke-Expression "`"$Expression`""}
+                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
+ FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Invoke-Expression): "Exception calling "GetPlatformIDs" with "0" argument(s): "Unable to load DLL 'OpenCL': The specified module could not be found. (Exception from HRESULT: 0x8007007E)""
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement."
Invoke-Expression : At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Include.psm1:214 char:38
+ ...             catch {$Expression = Invoke-Expression "`"$Expression`""}
+                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
+ FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand
Invoke-Expression : At line:1 char:3
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+   ~~
Unexpected token '-r' in expression or statement.

At line:1 char:6
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+      ~~
Unexpected token '-1' in expression or statement.

At line:1 char:9
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+         ~~~~~~
Unexpected token '-mport' in expression or statement.

At line:1 char:16
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                ~~~~~~
Unexpected token '-13333' in expression or statement.

At line:1 char:23
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                       ~~~~~~
Unexpected token '-epool' in expression or statement.

At line:1 char:30
+ ""-r -1 -mport -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Po ...
+                              ~~
Unexpected token '$(' in expression or statement.

At line:1 char:51
+ ... ort -13333 -epool $($Pools.Ethash.Host):$($Pools.Ethash.Port) -ewal $ ...
+                                            ~~~~~~~~~~~~~~~~~~~~~~
Unexpected token ':$($Pools.Ethash.Port)' in expression or statement.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Include.psm1:214 char:38
+ ...             catch {$Expression = Invoke-Expression "`"$Expression`""}
+                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
+ FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand

PS>TerminatingError(Invoke-Expression): "Exception calling "GetPlatformIDs" with "0" argument(s): "Unable to load DLL 'OpenCL': The specified module could not be found. (Exception from HRESULT: 0x8007007E)""
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
>> TerminatingError(Invoke-Expression): "At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement."
Invoke-Expression : At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Include.psm1:214 char:38
+ ...             catch {$Expression = Invoke-Expression "`"$Expression`""}
+                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
+ FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand
Invoke-Expression : At line:1 char:3
+ ""$(if(([OpenCl.Platform]::GetPlatformIDs() | ForEach-Object {[OpenCl ...
+   ~~
Unexpected token '$(' in expression or statement.

At line:1 char:287
+ ... 0) {0} else {$Stats.ClaymoreAmd2gbBlake2s20_Blake2s_HashRate.Week})""
+                                                                        ~~
Unexpected token '""' in expression or statement.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Include.psm1:214 char:38
+ ...             catch {$Expression = Invoke-Expression "`"$Expression`""}
+                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
+ FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\Users\oak\Desktop\psGUI-Thai\psGUI\bin\Release\NaradaMiner\Core.ps1:296 char:85
+ ... fig.Type.Count -eq 0 -or (Compare-Object $Config.Type $_.Type -Includ ...
+                                                           ~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand
